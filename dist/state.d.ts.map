{"version":3,"sources":["../src/state.ts"],"names":[],"mappings":"AAEA,UAAU,YAAY;IAClB,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,CAAC;IACnB,kBAAkB,EAAE,KAAK,CAAC;CAC7B;;;;;;;;;;;;;;AA+BD,wBAGE","file":"state.d.ts","sourcesContent":["const SET_CONFIG_STATE = \"SET_CONFIG_STATE\";\n\ninterface InitialState {\n    [key: string]: any;\n    config_initialized: false;\n}\n\nlet default_state: InitialState = {\n    config_initialized: false\n};\n\nlet reducer = (state = default_state, action) => {\n    switch (action.type) {\n        case SET_CONFIG_STATE: {\n            return Object.assign({}, action.payload);\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nlet actions = {\n    set: (config, state) => {\n        return {\n            type: SET_CONFIG_STATE,\n            payload: Object.assign({ config_initialized: true }, config)\n        };\n    },\n    update: (new_config_settings, state) => {\n        return {\n            type: SET_CONFIG_STATE,\n            payload: Object.assign({ config_initialized: true }, state, new_config_settings)\n        };\n    }\n};\nexport default {\n    reducer: reducer,\n    actions: actions\n};"],"sourceRoot":"/source/"}